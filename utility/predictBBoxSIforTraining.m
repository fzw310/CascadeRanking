function objPotentialBoxesSI = predictBBoxSI( im3u, base, W, NSS, numDetPerSz, T, filter1W)

load szActive
minT = T.minT;
numT = T.numT;



NUM_sz = length(szActive);
[imH, imW, ~] = size(im3u);

objPotentialBoxesSI = cell(1, NUM_sz);

%%%%%start%%%%%%%%%%%%%%%%%%%%%
filterW88_x = [-0.000172649308877295,0.000130070647932173,0.000196174287256816,0.000187355566479784,0.000106995582416367,0.000136611932038334,7.83871341075914e-05,-0.000147446257890661,-8.13298569774077e-05,0.000213113658452995,0.000198427534957887,0.000259969701322941,0.000174193600514283,7.80049791624969e-05,3.57113861341134e-06,-0.000157519398087318,0.000107056802146670,0.000302725780885181,9.62912268508223e-05,5.89402090159070e-05,3.57922918342504e-05,8.90601802719832e-05,1.71682626355595e-05,-0.000320705008072478,0.000417725077077860,0.000244526411124501,7.91975649535824e-05,-3.56586972768327e-05,-2.89503866921063e-05,-2.66637506404504e-05,-3.93481840878993e-05,-0.000231639128235586,0.000423955571809005,0.000224983683517958,7.76620517311410e-05,-4.33404686495643e-05,-1.86032804560513e-05,-4.70686694330433e-05,-5.00303120099437e-05,-0.000240304026491570,0.000120472794312192,0.000310922299158590,6.35280135546579e-05,6.85073259388623e-05,3.40999601479999e-05,6.42258516152235e-05,1.76105335720700e-05,-0.000287893045483329,-4.98643757965134e-05,0.000209703642888042,0.000189516230564764,0.000247453403459171,0.000143950221546518,9.67264064026431e-05,-9.92429738539498e-07,-0.000149269392398359,-0.000149400471847680,0.000130158843128817,0.000208822851619139,0.000192710701626033,0.000133532631811304,0.000141985926596751,5.86994627518886e-05,-0.000149990282739276];
W88_x = reshape(filterW88_x, 8, 8);
filterW88_y = [-0.000140585094224652,-0.000189946869337729,-0.000107500224270872,-3.03408901521393e-05,-1.47465621806815e-05,-2.77831337872699e-05,-8.92215916846476e-05,-6.60223539968916e-06,0.000205710634382392,3.21899394069581e-05,0.000131206400422121,0.000128466638169555,0.000102804412603890,0.000161786138857815,0.000113531151137393,1.25707497749589e-05,0.000325454747138590,0.000213415790350708,8.88807060720184e-05,0.000126118886065948,-6.19670815053477e-07,2.78151532822800e-05,8.60950708166170e-05,3.90065666830835e-05,0.000461057650456086,0.000182767583465552,0.000109361400533983,3.09309494675530e-05,7.98636902759745e-05,6.87574880181020e-05,0.000135570413272997,5.28553501057537e-05,0.000431319125955830,0.000209040859109805,0.000110304490154256,4.50447689825061e-05,2.78612356356916e-05,8.54486186109498e-05,7.80140785715378e-05,7.40645098008150e-05,0.000340773905646373,0.000201653868910677,0.000117114042517118,6.41539316538112e-05,3.21321553311921e-05,7.09164652798639e-05,5.47409187004076e-05,3.10348864647714e-05,0.000224180159162572,4.57067645720188e-05,0.000122702642996389,0.000118734574083495,9.34553070033217e-05,0.000107150813708924,0.000159769804505097,2.00025468761331e-05,-0.000117241579474797,-0.000192414171883380,-6.42901217941908e-05,-1.95023520934844e-05,-6.69776119846615e-06,-1.11351427468544e-05,-7.71702817480628e-05,6.75107859603308e-07];
W88_y = reshape(filterW88_y, 8, 8);
%%%%%%end%%%%%%%%%%%%%%%%%%%%%
for i = NUM_sz:-1:1
% for i = 21:-1:1    
    r = szActive(i);
    height = round(base ^ (floor(r / numT) + minT));
    width = round(base ^ (rem(r, numT) + minT));
    if height > imH * base || width > imW * base, continue; end
    height = min(height, imH);
    width = min(width, imW);
    
    subIm3u = imresize(im3u, [round(W * imH / height), round(W * imW / width)], 'nearest'); % resize image
    mag1f = computeNormedGradient(subIm3u, 3);
    
    matchCost1f = reshape(dotfzw(mag1f, filter1W), size(mag1f, 1) - W + 1, size(mag1f, 2) - W + 1);
   
    %non maximum suppression
    match = nonMaxSupfzw(matchCost1f, NSS, numDetPerSz, 1, height/W , width/W);
    matchCost.x = match(3, :)';
    matchCost.y = match(2, :)';
    matchCost.socre = match(1,:)';     

    % find true locations and match values
    ratioX = floor(width / W);
    ratioY = floor(height / W);
    box1 = round((matchCost.x - 1) * ratioX);
    box2 = round((matchCost.y - 1) * ratioY);
    box3 = min(box1 + width, imW);
    box4 = min(box2 + height, imH);
    box1 = box1 + 1; box2 = box2 + 1;
    boxW = box3 - box1 + 1;
    boxH = box4 - box2 + 1;
    box = [matchCost.socre, box1, box2, boxW, boxH];
    objPotentialBoxesSI{i} = box;
end

end
